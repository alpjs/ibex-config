{"version":3,"sources":["../src/deepFreeze.js"],"names":[],"mappings":";;;;;kBAEwB;;;AAAT,SAAS,UAAT,CAAoB,GAApB,EAAyB;AACpC,QAAI,eAAe,GAAf,EAAoB;AACpB,YAAI,KAAJ,GAAY,IAAI,MAAJ,GAAa,IAAI,GAAJ,GAAU,YAAY;AAC3C,kBAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN,CAD2C;SAAZ,CADf;KAAxB,MAIO,IAAI,eAAe,GAAf,EAAoB;AAC3B,YAAI,GAAJ,GAAU,IAAI,KAAJ,GAAY,IAAI,MAAJ,GAAa,YAAY;AAC3C,kBAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN,CAD2C;SAAZ,CADR;KAAxB;;AAMP,WAAO,mBAAP,CAA2B,GAA3B,EAAgC,OAAhC,CAAwC,QAAU;AAC9C,YAAI,OAAO,IAAI,IAAJ,CAAP;;;AAD0C,YAI1C,OAAO,IAAP,IAAe,QAAf,IAA2B,CAAC,OAAO,QAAP,CAAgB,IAAhB,CAAD,EAAwB;AACnD,uBAAW,IAAX,EADmD;SAAvD;KAJoC,CAAxC;;;AAXoC,WAqB7B,OAAO,MAAP,CAAc,GAAd,CAAP,CArBoC;CAAzB","file":"deepFreeze.js","sourcesContent":["// To make obj fully immutable, freeze each object in obj.\n// Also makes Array, Map and Set read-only.\nexport default function deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    Object.getOwnPropertyNames(obj).forEach((name) => {\n        let prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    // Freeze self\n    return Object.freeze(obj);\n}\n"]}