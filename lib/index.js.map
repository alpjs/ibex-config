{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;kBAyCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAnCxB,SAAS,UAAT,CAAoB,GAApB,EAAyB;AACrB,QAAI,eAAe,GAAf,EAAoB;AACpB,YAAI,KAAJ,GAAY,IAAI,MAAJ,GAAa,IAAI,GAAJ;;6CAAU,YAAY;AAC3C,kBAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN,CAD2C;SAAZ,CADf;KAAxB,MAIO,IAAI,eAAe,GAAf,EAAoB;AAC3B,YAAI,GAAJ,GAAU,IAAI,KAAJ,GAAY,IAAI,MAAJ;;6CAAa,YAAY;AAC3C,kBAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN,CAD2C;SAAZ,CADR;KAAxB;;AAMP,WAAO,mBAAP,CAA2B,GAA3B,EAAgC,OAAhC,CAAwC,UAAC,IAAD,EAAU;AAC9C,YAAI,OAAO,IAAI,IAAJ,CAAP;;;AAD0C,YAI1C,QAAO,mDAAP,IAAe,QAAf,IAA2B,CAAC,OAAO,QAAP,CAAgB,IAAhB,CAAD,EAAwB;AACnD,uBAAW,IAAX,EADmD;SAAvD;KAJoC,CAAxC;;;AAXqB,WAqBd,OAAO,MAAP,CAAc,GAAd,CAAP,CArBqB;CAAzB;;;;;;EAwBA,SAAS,YAAT,CAAsB,OAAtB,EAA+B,IAA/B,EAAqC;AACjC,WAAO,OAAO,MAAP,MAAiB,UAAU,mBAA3B,EACF,KADE,CACI;eAAM;KAAN,CADJ,CAEF,IAFE,CAEG;eAAO,CAAC,CAAC,GAAD;KAAR,CAFV,CADiC;CAArC;;;;;;EAMA,SAAS,UAAT,CAAoB,OAApB,EAA6B,IAA7B,EAAmC;AAC/B,WAAO,OAAO,MAAP,MAAiB,UAAU,mBAA3B,EACF,IADE,CACG;eAAO,oCAAU,GAAV;KAAP,CADV,CAD+B;CAAnC;;;;;EAKe,SAAS,SAAT,CAAmB,OAAnB,EAA4B;AACvC,cAAU,QAAQ,OAAR,CAAgB,MAAhB,EAAwB,GAAxB,CAAV,CADuC;AAEvC;;;;;;;;;;;;sEAAO,iBAAgB,GAAhB;oBAIG,qGASQ,KAAK;;;;;;;;;AAZnB,oCAAI,YAAJ;;;qDAAmB,UAAC,IAAD;2CAAU,aAAa,OAAb,EAAsB,IAAtB;iCAAV;AACnB,oCAAI,UAAJ;;;mDAAiB,UAAC,IAAD;2CAAU,WAAW,OAAX,EAAoB,IAApB;iCAAV;;;uCAEI,WAAW,OAAX,EAAoB,QAApB;;;AAAf;;qCAEF,IAAI,WAAJ;;;;;;;;;;uCAC+B,WAAW,OAAX,EAAoB,IAAI,WAAJ;;;;;;;;;;;;;AAAzC;AAAK;;AACX,uCAAO,GAAP,CAAW,GAAX,EAAgB,KAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAIJ,aAAa,OAAb,EAAsB,OAAtB;;;;;;;;;;uCAC+B,WAAW,OAAX,EAAoB,OAApB;;;;;;;;;;;;;AAArB;AAAK;;AACX,uCAAO,GAAP,CAAW,GAAX,EAAgB,KAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIR,oCAAI,MAAJ,GAAa,MAAb;AACA,oCAAI,OAAJ,CAAY,MAAZ,GAAqB,MAArB;AACA,oCAAI,OAAJ,CAAY,UAAZ,GAAyB,CAAC,CAAC,OAAO,GAAP,CAAW,YAAX,CAAD;;iEAEnB,WAAW,MAAX;;;;;;;;aAtBJ;;;;;;;;;WAAP;MAFuC;CAA5B","file":"index.js","sourcesContent":["import parseJSON from 'parse-json-object-as-map';\n\n// const _config = global._ibexConfig || {};\n\n// To make obj fully immutable, freeze each object in obj.\n// Also makes Array, Map and Set read-only.\nfunction deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    Object.getOwnPropertyNames(obj).forEach((name) => {\n        let prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    // Freeze self\n    return Object.freeze(obj);\n}\n\nfunction existsConfig(dirname, name) {\n    return System.import(`${dirname}${name}.json!text`)\n        .catch(() => false)\n        .then(res => !!res);\n}\n\nfunction loadConfig(dirname, name) {\n    return System.import(`${dirname}${name}.json!text`)\n        .then(res => parseJSON(res));\n}\n\nexport default function aukConfig(dirname) {\n    dirname = dirname.replace(/\\/*$/, '/');\n    return async function (app) {\n        app.existsConfig = (name) => existsConfig(dirname, name);\n        app.loadConfig = (name) => loadConfig(dirname, name);\n\n        const config = await loadConfig(dirname, 'common');\n\n        if (app.environment) {\n            for (let [key, value] of await loadConfig(dirname, app.environment)) {\n                config.set(key, value);\n            }\n        }\n\n        if (existsConfig(dirname, 'local')) {\n            for (let [key, value] of await loadConfig(dirname, 'local')) {\n                config.set(key, value);\n            }\n        }\n\n        app.config = config;\n        app.context.config = config;\n        app.context.production = !!config.get('production');\n\n        return deepFreeze(config);\n    };\n}\n"]}