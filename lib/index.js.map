{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import parseJSON from 'parse-json-object-as-map';\n\n// const _config = global._ibexConfig || {};\n\n// To make obj fully immutable, freeze each object in obj.\n// Also makes Array, Map and Set read-only.\nfunction deepFreeze(obj) {\n    if (obj instanceof Map) {\n        obj.clear = obj.delete = obj.set = function () {\n            throw new Error('map is read-only');\n        };\n    } else if (obj instanceof Set) {\n        obj.add = obj.clear = obj.delete = function () {\n            throw new Error('set is read-only');\n        };\n    }\n\n    Object.getOwnPropertyNames(obj).forEach((name) => {\n        let prop = obj[name];\n\n        // Freeze prop if it is an object\n        if (typeof prop == 'object' && !Object.isFrozen(prop)) {\n            deepFreeze(prop);\n        }\n    });\n\n    // Freeze self\n    return Object.freeze(obj);\n}\n\nfunction existsConfig(dirname, name) {\n    return System.import(dirname + name + '.json!text')\n        .catch(() => false)\n        .then(res => !!res);\n}\n\nfunction loadConfig(dirname, name) {\n    return System.import(dirname + name + '.json!text')\n        .then(res => parseJSON(res));\n}\n\nexport default function aukConfig(dirname) {\n    dirname = dirname.replace(/\\/*$/, '/');\n    return async function (app) {\n        app.existsConfig = (name) => existsConfig(dirname, name);\n        app.loadConfig = (name) => loadConfig(dirname, name);\n\n        const config = await loadConfig(dirname, 'common');\n\n        if (app.environment) {\n            for (let [key, value] of await loadConfig(dirname, app.environment)) {\n                config.set(key, value);\n            }\n        }\n\n        if (existsConfig(dirname, 'local')) {\n            for (let [key, value] of await loadConfig(dirname, 'local')) {\n                config.set(key, value);\n            }\n        }\n\n        app.config = config;\n        app.context.config = config;\n        app.context.production = !!config.get('production');\n\n        return deepFreeze(config);\n    };\n}\n"]}